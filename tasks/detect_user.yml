---
#   Copyright 2018 Julien Viard de Galbert
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#

# This task list handles detecting if a provided SSH user is correct


- name: Check if we can establish connection with {{ssh_detect_name}} user ({{ ssh_detect_user }})
  local_action: "command ssh -C -o Port={{ ansible_port }} -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no {% if ssh_detect_user != '' %}-o User={{ ssh_detect_user }}{% endif %} {{ ansible_host }} echo OK"
  ignore_errors: True
  changed_when: false
  register: ssh_detect

- name: Set inventory ansible_user to {{ssh_detect_name}} ({{ ssh_detect_user }})
  set_fact:
    ansible_user: "{{ ssh_detect_user }}"
  when: ssh_detect is defined and
        ssh_detect.stderr == '' and
        ssh_detect.stdout == 'OK'

- name: Check become with {{ssh_detect_name}} user ({{ ssh_detect_user }})
  ping:
  become: yes
  ignore_errors: True
  register: ssh_detect
  when: ssh_detect is defined and
        ssh_detect.stderr == '' and
        ssh_detect.stdout == 'OK'

- name: Set cached ssh last used user to {{ssh_detect_name}}
  set_fact:
    ssh_last_user: "{{ ssh_detect_user }}"
    cacheable: yes
  when: ssh_detect is defined and
        ssh_detect.failed is defined and
        ssh_detect.failed == False
  register: ssh_{{ssh_detect_name}}_user_set
